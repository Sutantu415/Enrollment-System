Sat Dec  2 10:49:52 UTC 2023
Linux LinuxMachine 6.3.13-linuxkit #1 SMP PREEMPT Thu Sep  7 07:48:47 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. Compilation warnings are in the section below
=====================================================
=====================================================
2. Program output are in the section below
=====================================================
Done.
=====================================================
3. clang-tidy warnings are in the section below
=====================================================
55864 warnings generated.
104093 warnings generated.
153184 warnings generated.
202265 warnings generated.
250613 warnings generated.
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/course.cpp:49:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (const auto &students : studentListWithID) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/course.cpp:63:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (int i = 1; i < studentsInClass.size(); i++) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/course.cpp:78:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (const auto &students : studentListWithID) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/course.cpp:92:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (int i = 1; i < studentsInClass.size(); i++) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/enrollmentsystem.cpp:22:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (auto &university : universities) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/enrollmentsystem.h:10:7: error: constructor does not initialize these fields: currentUniversity [cppcoreguidelines-pro-type-member-init,hicpp-member-init,-warnings-as-errors]
class EnrollmentSystem {
      ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/enrollmentsystem.h:10:7: error: class 'EnrollmentSystem' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions,-warnings-as-errors]
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/main.cpp:11:20: error: variable name 'es' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  EnrollmentSystem es;
                   ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.cpp:18:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (auto &student : universityStudents) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.cpp:25:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (auto &course : universityCourses) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.cpp:45:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (getline(file, readLine)) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.cpp:66:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (getline(file, readLine)) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.cpp:86:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  while (getline(file, readLine)) {
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.cpp:144:3: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
  for (const auto &courseInfo :
  ^
/home/cssuwbstudent/sutantu/342-p5-Saurabh-V24/university.h:11:7: error: class 'University' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions,-warnings-as-errors]
class University {
      ^
Suppressed 250589 warnings (250589 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
15 warnings treated as errors
=====================================================
4. clang-format warnings are in the section below
=====================================================
Running clang-format on ./course.cpp
Running clang-format on ./enrollmentsystem.cpp
Running clang-format on ./main.cpp
Running clang-format on ./student.cpp
Running clang-format on ./university.cpp
=====================================================
5. Memory leak issues are in the section below
=====================================================
=====================================================
6. valgrind memory test is in the section below. Look for "definitely lost" 
=====================================================
==2255== Memcheck, a memory error detector
==2255== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2255== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==2255== Command: ./a.out
==2255== Parent PID: 1834
==2255== 
==2255== 
==2255== HEAP SUMMARY:
==2255==     in use at exit: 0 bytes in 0 blocks
==2255==   total heap usage: 1,554 allocs, 1,554 frees, 198,319 bytes allocated
==2255== 
==2255== All heap blocks were freed -- no leaks are possible
==2255== 
==2255== For lists of detected and suppressed errors, rerun with: -s
==2255== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Sat Dec  2 10:50:22 UTC 2023
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
